diff --git a/networking/udhcp/d6_dhcpc.c b/networking/udhcp/d6_dhcpc.c
index cdd06188e..0a08be523 100644
--- a/networking/udhcp/d6_dhcpc.c
+++ b/networking/udhcp/d6_dhcpc.c
@@ -334,7 +334,7 @@ static void option_to_env(const uint8_t *option, const uint8_t *option_end)
  */
 			move_from_unaligned32(v32, option + 4 + 4);
 			v32 = ntohl(v32);
-			*new_env() = xasprintf("ipv6prefix_lease=%u", (unsigned)v32);
+			*new_env() = xasprintf("ipv6prefix_lease=%u", (unsigned)ntohl(v32));
 
 			sprint_nip6(ipv6str, option + 4 + 4 + 4 + 1);
 			*new_env() = xasprintf("ipv6prefix=%s/%u", ipv6str, (unsigned)(option[4 + 4 + 4]));
@@ -703,7 +703,7 @@ static NOINLINE int send_d6_discover(struct in6_addr *requested_ipv6)
 		client6_data.ia_na = xzalloc(len);
 		client6_data.ia_na->code = D6_OPT_IA_NA;
 		client6_data.ia_na->len = len - 4;
-		*(bb__aliased_uint32_t*)client6_data.ia_na->data = rand(); /* IAID */
+		*(bb__aliased_uint32_t*)client6_data.ia_na->data = 1000000000; /* IAID */
 		if (requested_ipv6) {
 			struct d6_option *iaaddr = (void*)(client6_data.ia_na->data + 4+4+4);
 			iaaddr->code = D6_OPT_IAADDR;
@@ -721,7 +721,7 @@ static NOINLINE int send_d6_discover(struct in6_addr *requested_ipv6)
 		client6_data.ia_pd = xzalloc(len);
 		client6_data.ia_pd->code = D6_OPT_IA_PD;
 		client6_data.ia_pd->len = len - 4;
-		*(bb__aliased_uint32_t*)client6_data.ia_pd->data = rand(); /* IAID */
+		*(bb__aliased_uint32_t*)client6_data.ia_pd->data = 1000000000; /* IAID */
 		opt_ptr = mempcpy(opt_ptr, client6_data.ia_pd, len);
 	}
 
@@ -1428,6 +1428,10 @@ int udhcpc6_main(int argc UNUSED_PARAM, char **argv)
 				continue;
 			case REQUESTING:
 				if (!discover_retries || packet_num < discover_retries) {
+					if (option_mask32 & OPT_d) {
+						free(client6_data.ia_pd);
+						client6_data.ia_pd = d6_copy_option(packet.d6_options, packet_end, D6_OPT_IA_PD);
+					}
 					/* send multicast select packet */
 					send_d6_select();
 					timeout = discover_timeout;
